Utilities

public HashMap<Integer,Integer> getDegreesMap(int[] c) {
		HashMap<Integer, Integer> degreesMap = new HashMap<>();
		c = reverse(c, c.length);
		for (int i = 0; i < c.length; i++) {
			if (c[i] != 0) degreesMap.put(c[i], i);
		}
		return degreesMap;
	}
	
	public int[] getDegreesArray(int[] c) {
		int nonzeroCoefficients = 0;
		for (int i = 0; i < c.length; i++) {
			if (c[i] != 0) nonzeroCoefficients++;
		}
		ArrayList<Integer> currentDegrees = new ArrayList<>();
		c = reverse(c, c.length); //used in the instance method Poly.add(), so reverse() returns original array where nonzero c[2] is x^2
		for (int j = 0; j < c.length; j++) {
			if (c[j] != 0) currentDegrees.add(j);
		}
		int[] returnArray = toArray(currentDegrees);
		returnArray = reverse(returnArray, returnArray.length);
		return returnArray;
	}
  
  public int[] reverse(int[] arr, int arr_length) {
		int[] reversedArr = new int[arr_length];
		for (int i = 0; i < arr_length; i++) {
			reversedArr[arr_length - 1 - i] = arr[i];
		}
		return reversedArr;
	}
